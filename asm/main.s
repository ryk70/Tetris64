;
; File generated by cc65 v 2.17 - Git N/A
;
	.fopt		compiler,"cc65 v 2.17 - Git N/A"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_rand
	.import		__randomize
	.import		_clrscr
	.import		_gotoxy
	.import		_cputcxy
	.import		_cprintf
	.import		_cgetc
	.import		_cursor
	.import		_textcolor
	.import		_bgcolor
	.import		_bordercolor
	.import		_screensize
	.import		_strlen
	.export		_main

.segment	"RODATA"

_Title:
	.byte	$D4,$C5,$D4,$D2,$C9,$D3,$36,$34,$00
_Inst:
	.byte	$D0,$D2,$C5,$D3,$D3,$20,$D8,$20,$D4,$CF,$20,$D0,$CC,$C1,$D9,$00
L0020:
	.byte	$25,$53,$00
L0017	:=	L0020+0

.segment	"BSS"

_xdim:
	.res	1,$00
_ydim:
	.res	1,$00
_i:
	.res	1,$00
_isGameOver:
	.res	1,$00
_linesCleared:
	.res	2,$00
_curTet:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ draw_title (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_title: near

.segment	"CODE"

	jsr     _clrscr
	lda     #$00
	jsr     _bgcolor
	lda     #$00
	jsr     _bordercolor
	lda     #$01
	jsr     _textcolor
	lda     _xdim
	jsr     pusha0
	lda     #<(_Title)
	ldx     #>(_Title)
	jsr     _strlen
	jsr     tossubax
	jsr     shrax1
	jsr     pusha
	lda     _ydim
	lsr     a
	sec
	sbc     #$01
	jsr     _gotoxy
	lda     #<(L0017)
	ldx     #>(L0017)
	jsr     pushax
	lda     #<(_Title)
	ldx     #>(_Title)
	jsr     pushax
	ldy     #$04
	jsr     _cprintf
	lda     _xdim
	jsr     pusha0
	lda     #<(_Inst)
	ldx     #>(_Inst)
	jsr     _strlen
	jsr     tossubax
	jsr     shrax1
	jsr     pusha
	lda     _ydim
	lsr     a
	jsr     _gotoxy
	lda     #<(L0020)
	ldx     #>(L0020)
	jsr     pushax
	lda     #<(_Inst)
	ldx     #>(_Inst)
	jsr     pushax
	ldy     #$04
	jmp     _cprintf

.endproc

; ---------------------------------------------------------------
; void __near__ draw_game (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_game: near

.segment	"CODE"

	jsr     _clrscr
	lda     #$01
	sta     _i
	jmp     L006C
L006B:	lda     _i
	clc
	adc     #$05
	jsr     pusha
	lda     #$02
	jsr     pusha
	lda     #$EF
	jsr     _cputcxy
	inc     _i
L006C:	lda     _i
	cmp     #$0B
	bcc     L006B
	lda     #$01
	sta     _i
	jmp     L006E
L006D:	lda     _i
	clc
	adc     #$05
	jsr     pusha
	lda     #$17
	jsr     pusha
	lda     #$F7
	jsr     _cputcxy
	inc     _i
L006E:	lda     _i
	cmp     #$0B
	bcc     L006D
	lda     #$01
	sta     _i
	jmp     L006F
L003D:	lda     #$05
	jsr     pusha
	lda     _i
	clc
	adc     #$02
	jsr     pusha
	lda     #$EA
	jsr     _cputcxy
	inc     _i
L006F:	lda     _i
	cmp     #$15
	bcc     L003D
	lda     #$01
	sta     _i
	jmp     L0070
L0048:	lda     #$10
	jsr     pusha
	lda     _i
	clc
	adc     #$02
	jsr     pusha
	lda     #$F4
	jsr     _cputcxy
	inc     _i
L0070:	lda     _i
	cmp     #$15
	bcc     L0048
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ pickTet (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_pickTet: near

.segment	"CODE"

	jsr     __randomize
	jsr     _rand
	jsr     pushax
	ldx     #$00
	lda     #$07
	jsr     tosmoda0
	sta     _curTet
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ drawTet (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_drawTet: near

.segment	"CODE"

	rts

.endproc

; ---------------------------------------------------------------
; void __near__ game_loop (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_game_loop: near

.segment	"CODE"

	jmp     L0059
L0057:	jsr     _pickTet
	jsr     _drawTet
L0059:	lda     _isGameOver
	cmp     #$01
	bne     L0057
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	lda     #$00
	jsr     _cursor
	lda     #<(_xdim)
	ldx     #>(_xdim)
	jsr     pushax
	lda     #<(_ydim)
	ldx     #>(_ydim)
	jsr     _screensize
	jsr     _draw_title
L0064:	jsr     _cgetc
	cmp     #$58
	bne     L0064
	jsr     _draw_game
	jsr     _game_loop
	ldx     #$00
	txa
	rts

.endproc

